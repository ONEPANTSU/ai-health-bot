from aiogram import Router, F
from aiogram.types import (
    Message,
    ReplyKeyboardMarkup,
    KeyboardButton,
    ReplyKeyboardRemove,
)
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext

from src.bot.states import TimezoneStates
from src.db.connection import get_db_connection

router = Router()

# –°–ø–∏—Å–æ–∫ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —á–∞—Å–æ–≤—ã—Ö –ø–æ—è—Å–æ–≤ —Å –ø–æ–Ω—è—Ç–Ω—ã–º–∏ –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏
TIMEZONE_OPTIONS = [
    ("UTC+0 (–õ–æ–Ω–¥–æ–Ω)", "UTC+0"),
    ("UTC+1 (–ü–∞—Ä–∏–∂, –ë–µ—Ä–ª–∏–Ω)", "UTC+1"),
    ("UTC+2 (–ö–∏–µ–≤, –•–µ–ª—å—Å–∏–Ω–∫–∏)", "UTC+2"),
    ("UTC+3 (–ú–æ—Å–∫–≤–∞, –°—Ç–∞–º–±—É–ª)", "UTC+3"),
    ("UTC+4 (–î—É–±–∞–π, –°–∞–º–∞—Ä–∞)", "UTC+4"),
    ("UTC+5 (–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥, –ò—Å–ª–∞–º–∞–±–∞–¥)", "UTC+5"),
    ("UTC+6 (–ê–ª–º–∞—Ç—ã, –î–∞–∫–∫–∞)", "UTC+6"),
    ("UTC+7 (–ë–∞–Ω–≥–∫–æ–∫, –ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫)", "UTC+7"),
    ("UTC+8 (–ü–µ–∫–∏–Ω, –°–∏–Ω–≥–∞–ø—É—Ä)", "UTC+8"),
    ("UTC+9 (–¢–æ–∫–∏–æ, –°–µ—É–ª)", "UTC+9"),
    ("UTC+10 (–í–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫, –°–∏–¥–Ω–µ–π)", "UTC+10"),
    ("UTC+11 (–ú–∞–≥–∞–¥–∞–Ω, –ù–æ–≤–∞—è –ö–∞–ª–µ–¥–æ–Ω–∏—è)", "UTC+11"),
    ("UTC+12 (–ö–∞–º—á–∞—Ç–∫–∞, –û–∫–ª–µ–Ω–¥)", "UTC+12"),
    ("UTC-1 (–ê–∑–æ—Ä—Å–∫–∏–µ –æ-–≤–∞)", "UTC-1"),
    ("UTC-2 (–Æ–∂–Ω–∞—è –ì–µ–æ—Ä–≥–∏—è)", "UTC-2"),
    ("UTC-3 (–ë—Ä–∞–∑–∏–ª–∏—è, –ê—Ä–≥–µ–Ω—Ç–∏–Ω–∞)", "UTC-3"),
    ("UTC-4 (–ù—å—é-–ô–æ—Ä–∫, –¢–æ—Ä–æ–Ω—Ç–æ)", "UTC-4"),
    ("UTC-5 (–ß–∏–∫–∞–≥–æ, –ú–µ—Ö–∏–∫–æ)", "UTC-5"),
    ("UTC-6 (–î–µ–Ω–≤–µ—Ä, –ì–≤–∞—Ç–µ–º–∞–ª–∞)", "UTC-6"),
    ("UTC-7 (–õ–æ—Å-–ê–Ω–¥–∂–µ–ª–µ—Å, –í–∞–Ω–∫—É–≤–µ—Ä)", "UTC-7"),
    ("UTC-8 (–ê–ª—è—Å–∫–∞)", "UTC-8"),
    ("UTC-9 (–ì–∞–≤–∞–π–∏)", "UTC-9"),
    ("UTC-10 (–ì–∞–≤–∞–π–∏-–ê–ª–µ—É—Ç—ã)", "UTC-10"),
]


@router.message(Command("set_timezone"))
async def ask_timezone(message: Message, state: FSMContext):
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ (–ø–æ 3 –≤ —Ä—è–¥—É)
    keyboard = []
    row = []

    for i, (label, tz) in enumerate(TIMEZONE_OPTIONS, 1):
        row.append(KeyboardButton(text=label))
        if i % 3 == 0 or i == len(TIMEZONE_OPTIONS):
            keyboard.append(row)
            row = []

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –≤–≤–æ–¥–∞
    keyboard.append([KeyboardButton(text="–í–≤–µ—Å—Ç–∏ –≤—Ä—É—á–Ω—É—é (–Ω–∞–ø—Ä–∏–º–µ—Ä UTC+3)")])

    timezone_keyboard = ReplyKeyboardMarkup(
        keyboard=keyboard, resize_keyboard=True, one_time_keyboard=True
    )

    await message.answer(
        "üïí –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å:\n\n"
        "–ú–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –∏–∑ —Å–ø–∏—Å–∫–∞ –∏–ª–∏ –≤–≤–µ—Å—Ç–∏ –≤—Ä—É—á–Ω—É—é –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n"
        "<code>UTC+3</code> –∏–ª–∏ <code>UTC-5</code>",
        reply_markup=timezone_keyboard,
        parse_mode="HTML",
    )
    await state.set_state(TimezoneStates.waiting_timezone)


@router.message(TimezoneStates.waiting_timezone, F.text.regexp(r"^UTC[+-]\d{1,2}$"))
async def handle_timezone_input(message: Message, state: FSMContext):
    await save_timezone(message, message.text.strip())
    await state.clear()


@router.message(TimezoneStates.waiting_timezone, F.text.startswith("UTC"))
async def handle_timezone_button(message: Message, state: FSMContext):
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—ã–±–æ—Ä –∏–∑ –∫–Ω–æ–ø–æ–∫ (–∏—â–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –≤ TIMEZONE_OPTIONS)
    selected_text = message.text
    for label, tz in TIMEZONE_OPTIONS:
        if selected_text.startswith(label.split()[0]):
            await save_timezone(message, tz)
            await state.clear()
            return

    await message.answer(
        "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –∏–∑ —Å–ø–∏—Å–∫–∞ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –≤—Ä—É—á–Ω—É—é"
    )


@router.message(TimezoneStates.waiting_timezone)
async def handle_wrong_timezone_format(message: Message):
    await message.answer(
        "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞.\n\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n"
        "<code>UTC+3</code> –∏–ª–∏ <code>UTC-5</code>\n\n"
        "–ò–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.",
        parse_mode="HTML",
    )


async def save_timezone(message: Message, timezone_str: str):
    # –ú–∞–ø–ø–∏–Ω–≥ –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç IANA (Europe/Moscow)
    iana_timezones = {
        "UTC+0": "Europe/London",
        "UTC+1": "Europe/Paris",
        "UTC+2": "Europe/Kiev",
        "UTC+3": "Europe/Moscow",
        "UTC+4": "Asia/Dubai",
        "UTC+5": "Asia/Yekaterinburg",
        "UTC+6": "Asia/Almaty",
        "UTC+7": "Asia/Bangkok",
        "UTC+8": "Asia/Shanghai",
        "UTC+9": "Asia/Tokyo",
        "UTC+10": "Asia/Vladivostok",
        "UTC+11": "Asia/Magadan",
        "UTC+12": "Pacific/Auckland",
        "UTC-1": "Atlantic/Azores",
        "UTC-2": "Atlantic/South_Georgia",
        "UTC-3": "America/Sao_Paulo",
        "UTC-4": "America/New_York",
        "UTC-5": "America/Chicago",
        "UTC-6": "America/Denver",
        "UTC-7": "America/Los_Angeles",
        "UTC-8": "America/Anchorage",
        "UTC-9": "Pacific/Honolulu",
        "UTC-10": "Pacific/Honolulu",
    }

    # –ü–æ–ª—É—á–∞–µ–º –∫—Ä–∞—Å–∏–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–∑ –∫–Ω–æ–ø–∫–∏ ("UTC+10 (–í–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫...)" -> "UTC+10")
    selected_tz = next(
        (
            tz
            for label, tz in TIMEZONE_OPTIONS
            if label.startswith(timezone_str.split()[0])
        ),
        timezone_str,
    )

    timezone_db = iana_timezones.get(selected_tz, selected_tz)

    try:
        conn = await get_db_connection()
        await conn.execute(
            "UPDATE patients SET timezone = $1 WHERE telegram_id = $2",
            timezone_db,
            message.from_user.id,
        )

        # –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
        display_tz = next(
            (label for label, tz in TIMEZONE_OPTIONS if tz == selected_tz), selected_tz
        )

        await message.answer(
            f"‚úÖ –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: <b>{display_tz}</b>\n"
            f"–¢–µ–ø–µ—Ä—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –≤ –≤–∞—à–µ –º–µ—Å—Ç–Ω–æ–µ –≤—Ä–µ–º—è.",
            reply_markup=ReplyKeyboardRemove(),
            parse_mode="HTML",
        )
    except Exception as e:
        await message.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞")
        print(f"Timezone save error: {e}")

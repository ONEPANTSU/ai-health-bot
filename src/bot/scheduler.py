import asyncio
from aiogram import Bot
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from apscheduler.schedulers.asyncio import AsyncIOScheduler
from apscheduler.triggers.cron import CronTrigger
from datetime import datetime
import logging
import pytz

from src.db.connection import get_db_connection
from src.db.patient_repository import get_all_patients
from src.bot.handlers.testing import get_global_testing_start_date

logger = logging.getLogger(__name__)
scheduler = AsyncIOScheduler()


async def get_user_timezone(user_id: int) -> str:
    """–ü–æ–ª—É—á–∞–µ—Ç —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    try:
        conn = await get_db_connection()
        tz = await conn.fetchval(
            "SELECT timezone FROM patients WHERE telegram_id = $1", user_id
        )
        return tz if tz else "Europe/Moscow"
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞: {e}")
        return "Europe/Moscow"


async def send_questionnaire_to_user(bot: Bot, user_id: int, text: str, command: str):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∞–Ω–∫–µ—Ç—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å –∫–Ω–æ–ø–∫–æ–π"""
    try:
        await bot.send_message(
            chat_id=user_id,
            text=text,
            reply_markup=ReplyKeyboardMarkup(
                keyboard=[[KeyboardButton(text=command)]],
                resize_keyboard=True,
            ),
        )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")


async def check_and_send_questionnaires(
    bot: Bot,
    test_users: list = None,
    test_now: datetime = None,
    force_day: int = None,
    force_time: tuple = None,
):
    logger.info("Starting questionnaire check...")

    try:
        if test_users is not None:
            patients = test_users
            conn = None
            use_test_data = True
        else:
            conn = await get_db_connection()
            patients = await get_all_patients(conn)
            use_test_data = False
            logger.info(f"Patients count: {len(patients)}")

        global_start_date = (
            None if use_test_data else await get_global_testing_start_date()
        )

        async def process_patient(patient):
            try:
                conn = await get_db_connection()

                telegram_id = patient["telegram_id"]
                if not patient.get("is_active", False):
                    return

                tz = pytz.timezone(patient.get("timezone", "Europe/Moscow"))
                now = test_now.astimezone(tz) if test_now else datetime.now(tz)

                if force_time:
                    now = now.replace(
                        hour=force_time[0],
                        minute=force_time[1],
                        second=0,
                        microsecond=0,
                    )

                days_passed = (now.date() - global_start_date.date()).days

                logger.info(
                    f"User {telegram_id}: start_date={global_start_date.date()}, now={now.date()}, days_passed={days_passed}"
                )

                day_of_program = (
                    force_day if force_day is not None else (days_passed + 1)
                )

                current_hour = now.hour
                current_minute = now.minute
                # 1. –ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è –∞–Ω–∫–µ—Ç–∞ (10:00)
                if (current_hour == 10 and current_minute == 0) or (
                        force_time and force_time == (10, 0)
                ):
                    await check_and_send_daily_questionnaire(
                        bot, conn, telegram_id, now.date()
                    )

                # ----------------- –î–ï–ù–¨ 1 -----------------
                # 2. –ê–Ω–∫–µ—Ç–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è (–¥–µ–Ω—å 1, 9:00)
                if day_of_program == 1 and (current_hour == 9 and current_minute == 0):
                    await send_questionnaire_to_user(
                        bot,
                        telegram_id,
                        "‚è∞ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∞–Ω–∫–µ—Ç—É –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è: /greeting",
                        "/greeting",
                    )

                # –î–∞–Ω–Ω—ã–µ —Å –Ω–æ—Å–∏–º–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ (–¥–µ–Ω—å 1, 20:00)
                if day_of_program == 1 and (current_hour == 20 and current_minute == 0):
                    await send_questionnaire_to_user(
                        bot,
                        telegram_id,
                        "‚åö –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–¥–∞–Ω–∏–µ '–î–∞–Ω–Ω—ã–µ —Å –Ω–æ—Å–∏–º–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞': /wearable_data",
                        "/wearable_data",
                    )

                # ----------------- –î–ï–ù–¨ 2 -----------------
                if day_of_program == 2 and (current_hour == 11 and current_minute == 0):
                    await send_questionnaire_to_user(
                        bot,
                        telegram_id,
                        "üë®‚Äçü¶± –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–¥–∞–Ω–∏–µ '–§–æ—Ç–æ –ª–∏—Ü–∞': /face",
                        "/face",
                    )
                if day_of_program == 2 and (current_hour == 18 and current_minute == 30):
                    await send_questionnaire_to_user(
                        bot,
                        telegram_id,
                        "üßò –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∞–Ω–∫–µ—Ç—É –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç–∏ (–º–µ–¥–∏—Ç–∞—Ü–∏–∏): /mindfulness",
                        "/mindfulness",
                    )

                # ----------------- –î–ï–ù–¨ 3 -----------------
                if day_of_program == 3 and (current_hour == 19 and current_minute == 0):
                    await send_questionnaire_to_user(
                        bot,
                        telegram_id,
                        "ü´Å –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–¥–∞–Ω–∏–µ '–î—ã—Ö–∞–Ω–∏–µ –≤ –ø–æ–∫–æ–µ': /rest_breathing",
                        "/rest_breathing",
                    )

                # if day_of_program == 3 and (current_hour == 18 and current_minute == 30):
                #     await send_questionnaire_to_user(
                #         bot,
                #         telegram_id,
                #         "üßç –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–¥–∞–Ω–∏–µ '–§–æ—Ç–æ –≤ –ø–æ–ª–Ω—ã–π —Ä–æ—Å—Ç': /full_body",
                #         "/full_body",
                #     )
                #
                # if day_of_program == 3 and (current_hour == 19 and current_minute == 0):
                #     await send_questionnaire_to_user(
                #         bot,
                #         telegram_id,
                #         "üßë‚Äç‚öïÔ∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–¥–∞–Ω–∏–µ '–û–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –∑–∞ 3 –º–µ—Å—è—Ü–∞': /checkups",
                #         "/checkups",
                #     )

                # ----------------- –î–ï–ù–¨ 4 -----------------

                if day_of_program == 4 and (current_hour == 19 and current_minute == 0):
                    await send_questionnaire_to_user(
                        bot,
                        telegram_id,
                        "‚ö°Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–¥–∞–Ω–∏–µ '–ü–ª–∞–Ω–∫–∞': /plank",
                        "/plank",
                    )

                # 3. –ê–Ω–∫–µ—Ç–∞ –∑–¥–æ—Ä–æ–≤—å—è (–¥–µ–Ω—å 4, 19:00)
                # if day_of_program == 4 and (current_hour == 19 and current_minute == 0):
                #     await send_questionnaire_to_user(
                #         bot,
                #         telegram_id,
                #         "üè• –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∞–Ω–∫–µ—Ç—É —Å–æ—Å—Ç–æ—è–Ω–∏—è –∑–¥–æ—Ä–æ–≤—å—è: /subjective_health",
                #         "/subjective_health",
                #     )
                #
                # if day_of_program == 4 and (current_hour == 12 and current_minute == 0):
                #     await send_questionnaire_to_user(
                #         bot,
                #         telegram_id,
                #         "ü©∏Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–¥–∞–Ω–∏–µ '–°–¥–∞—á–∞ –∞–Ω–∞–ª–∏–∑–æ–≤ –∫—Ä–æ–≤–∏': /blood",
                #         "/blood",
                #     )

                # ----------------- –î–ï–ù–¨ 5 -----------------
                if day_of_program == 5 and (current_hour == 19 and current_minute == 0):
                    await send_questionnaire_to_user(
                        bot,
                        telegram_id,
                        "‚öñÔ∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–¥–∞–Ω–∏–µ '–ë–∞–ª–∞–Ω—Å': /balance",
                        "/balance",
                    )

                # if day_of_program == 5 and (current_hour == 19 and current_minute == 0):
                #     await send_questionnaire_to_user(
                #         bot,
                #         telegram_id,
                #         "üö∂ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–¥–∞–Ω–∏–µ '–•–æ–¥—å–±–∞': /walking",
                #         "/walking",
                #     )

                # ----------------- –î–ï–ù–¨ 6 -----------------
                if day_of_program == 6 and (current_hour == 11 and current_minute == 0):
                    await send_questionnaire_to_user(
                        bot,
                        telegram_id,
                        "Ô∏è‚ù§Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–¥–∞–Ω–∏–µ '–ò–∑–º–µ—Ä–µ–Ω–∏—è –¥–∞–≤–ª–µ–Ω–∏—è –∏ –ø—É–ª—å—Å–∞': /pressure",
                        "/pressure",
                    )

                # ----------------- –î–ï–ù–¨ 7 -----------------
                if day_of_program == 7 and (current_hour == 19 and current_minute == 0):
                    await send_questionnaire_to_user(
                            bot,
                            telegram_id,
                            "üè• –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∞–Ω–∫–µ—Ç—É —Å–æ—Å—Ç–æ—è–Ω–∏—è –∑–¥–æ—Ä–æ–≤—å—è: /subjective_health",
                            "/subjective_health",
                        )

                if day_of_program == 7 and (current_hour == 20 and current_minute == 0):
                    await send_questionnaire_to_user(
                            bot,
                            telegram_id,
                            "üßë‚Äç‚öïÔ∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–¥–∞–Ω–∏–µ '–û–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –∑–∞ 3 –º–µ—Å—è—Ü–∞': /checkups",
                            "/checkups",
                        )

                # if day_of_program == 7 and (current_hour == 19 and current_minute == 0):
                #     await send_questionnaire_to_user(
                #         bot,
                #         telegram_id,
                #         "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å: /feedback",
                #         "/feedback",
                #     )

                # ----------------- –î–ï–ù–¨ 8 -----------------
                if day_of_program == 8 and (current_hour == 18 and current_minute == 30):
                    await send_questionnaire_to_user(
                        bot,
                        telegram_id,
                        "üèÉ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–¥–∞–Ω–∏–µ '–ë–µ–≥': /running",
                        "/running",
                    )
                #
                # if day_of_program == 8 and (current_hour == 19 and current_minute == 0):
                #     await send_questionnaire_to_user(
                #         bot,
                #         telegram_id,
                #         "üçé –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∞–Ω–∫–µ—Ç—É –ø–∏—Ç–∞–Ω–∏—è: /nutrition",
                #         "/nutrition",
                #     )

                # ----------------- –î–ï–ù–¨ 9 -----------------

                if day_of_program == 9 and (current_hour == 19 and current_minute == 0):
                    await send_questionnaire_to_user(
                        bot,
                        telegram_id,
                        "üì± –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–¥–∞–Ω–∏–µ '–†–∞—Å—Å–∫–∞–∑ –æ —Å–µ–±–µ': /speech",
                        "/speech",
                    )

                # if day_of_program == 9 and (current_hour == 10 and current_minute == 30):
                #     await send_questionnaire_to_user(
                #         bot,
                #         telegram_id,
                #         "ü¶∂ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–¥–∞–Ω–∏–µ '–§–æ—Ç–æ —Å—Ç–æ–ø': /feet",
                #         "/feet",
                #     )
                #     await send_questionnaire_to_user(
                #         bot,
                #         telegram_id,
                #         "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–¥–∞–Ω–∏–µ '–¢–µ—Å—Ç –Ω–∞ —Ä–µ–∞–∫—Ü–∏—é': /reaction",
                #         "/reaction",
                #     )
                #


                # ----------------- –î–ï–ù–¨ 10 -----------------
                # 5. –ê–Ω–∫–µ—Ç–∞ —Ç–µ–ª–æ—Å–ª–æ–∂–µ–Ω–∏—è (–¥–µ–Ω—å 10, 18:30)
                # if day_of_program == 10 and (current_hour == 18 and current_minute == 30):
                #     await send_questionnaire_to_user(
                #         bot,
                #         telegram_id,
                #         "üìè –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∞–Ω–∫–µ—Ç—É —Ç–µ–ª–æ—Å–ª–æ–∂–µ–Ω–∏—è: /body_measurements",
                #         "/body_measurements",
                #     )

                if day_of_program == 10 and (current_hour == 19 and current_minute == 0):
                    await send_questionnaire_to_user(
                        bot,
                        telegram_id,
                        "‚ö°Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–¥–∞–Ω–∏–µ '–ü—Ä–∏—Å–µ–¥–∞–Ω–∏—è': /squats",
                        "/squats",
                    )

                if day_of_program == 10 and (current_hour == 20 and current_minute == 0):
                    await send_questionnaire_to_user(
                        bot,
                        telegram_id,
                        "üßë‚Äç‚öïÔ∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–¥–∞–Ω–∏–µ '–û–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –∑–∞ 3 –º–µ—Å—è—Ü–∞': /checkups",
                        "/checkups",
                    )

                # ----------------- –î–ï–ù–¨ 11 -----------------

                if day_of_program == 11 and (current_hour == 18 and current_minute == 30):
                    await send_questionnaire_to_user(
                        bot,
                        telegram_id,
                        "ü´≥ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–¥–∞–Ω–∏–µ '–ü–æ–¥–Ω—è—Ç–∏–µ –æ–±—ä–µ–∫—Ç–∞': /picking_up",
                        "/picking_up",
                    )


                # ----------------- –î–ï–ù–¨ 12 -----------------
                if day_of_program == 12 and (current_hour == 9 and current_minute == 0):
                    await send_questionnaire_to_user(
                        bot,
                        telegram_id,
                        "ü´Å –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–¥–∞–Ω–∏–µ '–î—ã—Ö–∞–Ω–∏–µ –≤ –ø–æ–∫–æ–µ': /rest_breathing",
                        "/rest_breathing",
                    )

                # ----------------- –î–ï–ù–¨ 13 -----------------
                if day_of_program == 13 and (current_hour == 19 and current_minute == 0):
                    await send_questionnaire_to_user(
                        bot,
                        telegram_id,
                        "ü´Å –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–¥–∞–Ω–∏–µ '–î—ã—Ö–∞–Ω–∏–µ –ø–æ—Å–ª–µ –Ω–∞–≥—Ä—É–∑–∫–∏': /breathing",
                        "/breathing",
                    )

                # ----------------- –î–ï–ù–¨ 14 -----------------
                if day_of_program == 14 and (current_hour == 11 and current_minute == 0):
                    await send_questionnaire_to_user(
                        bot,
                        telegram_id,
                        "üëÖ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–¥–∞–Ω–∏–µ '–§–æ—Ç–æ —è–∑—ã–∫–∞ —É—Ç—Ä–æ–º': /tongue",
                        "/tongue",
                    )
                if day_of_program == 14 and (current_hour == 11 and current_minute == 30):
                    await send_questionnaire_to_user(
                        bot,
                        telegram_id,
                        "üëÅÔ∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–¥–∞–Ω–∏–µ '–ú–∏–∫—Ä–æ—Ñ–æ—Ç–æ –≥–ª–∞–∑–∞': /eye",
                        "/eye",
                    )
                if day_of_program == 14 and (current_hour == 12 and current_minute == 0):
                    await send_questionnaire_to_user(
                        bot,
                        telegram_id,
                        "üë®‚Äçü¶± –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–¥–∞–Ω–∏–µ '–§–æ—Ç–æ –ª–∏—Ü–∞': /face",
                        "/face",
                    )

                # 7. –ê–Ω–∫–µ—Ç–∞ –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç–∏ (–¥–µ–Ω—å 14, 18:30)
                # if day_of_program == 14 and (current_hour == 18 and current_minute == 30):
                #     await send_questionnaire_to_user(
                #         bot,
                #         telegram_id,
                #         "üßò –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∞–Ω–∫–µ—Ç—É –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç–∏ (–º–µ–¥–∏—Ç–∞—Ü–∏–∏): /mindfulness",
                #         "/mindfulness",
                #     )
                #
                # if day_of_program == 14 and (current_hour == 9 and current_minute == 0):
                #     await send_questionnaire_to_user(
                #         bot,
                #         telegram_id,
                #         "Ô∏è‚ù§Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–¥–∞–Ω–∏–µ '–ò–∑–º–µ—Ä–µ–Ω–∏—è –¥–∞–≤–ª–µ–Ω–∏—è –∏ –ø—É–ª—å—Å–∞': /pressure",
                #         "/pressure",
                #     )
                #
                # if day_of_program == 14 and (current_hour == 19 and current_minute == 0):
                #     await send_questionnaire_to_user(
                #         bot,
                #         telegram_id,
                #         "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å: /feedback",
                #         "/feedback",
                #     )

                # ----------------- –î–ï–ù–¨ 15 -----------------
                if day_of_program == 15 and (current_hour == 18 and current_minute == 30):
                    await send_questionnaire_to_user(
                        bot,
                        telegram_id,
                        "üìè –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∞–Ω–∫–µ—Ç—É —Ç–µ–ª–æ—Å–ª–æ–∂–µ–Ω–∏—è: /body_measurements",
                        "/body_measurements",
                    )
                if day_of_program == 15 and (current_hour == 19 and current_minute == 0):
                    await send_questionnaire_to_user(
                        bot,
                        telegram_id,
                        "üíä –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∞–Ω–∫–µ—Ç—É –ø—Ä–∏–µ–º–∞ –ë–ê–î–æ–≤/–≤–∏—Ç–∞–º–∏–Ω–æ–≤: /supplements",
                        "/supplements",
                    )

                # ----------------- –î–ï–ù–¨ 16 -----------------
                if day_of_program == 16 and (current_hour == 19 and current_minute == 0):
                    await send_questionnaire_to_user(
                        bot,
                        telegram_id,
                        "üßç –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–¥–∞–Ω–∏–µ '–§–æ—Ç–æ –≤ –ø–æ–ª–Ω—ã–π —Ä–æ—Å—Ç': /full_body",
                        "/full_body",
                    )

                # ----------------- –î–ï–ù–¨ 17 -----------------
                if day_of_program == 17 and (current_hour == 18 and current_minute == 30):
                    await send_questionnaire_to_user(
                        bot,
                        telegram_id,
                        "üñêÔ∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–¥–∞–Ω–∏–µ '–§–æ—Ç–æ —Ä—É–∫': /hands",
                        "/hands",
                    )
                if day_of_program == 17 and (current_hour == 19 and current_minute == 0):
                    await send_questionnaire_to_user(
                        bot,
                        telegram_id,
                        "ü¶∂ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–¥–∞–Ω–∏–µ '–§–æ—Ç–æ —Å—Ç–æ–ø': /feet",
                        "/feet",
                    )

                # ----------------- –î–ï–ù–¨ 18 -----------------
                if day_of_program == 18 and (current_hour == 19 and current_minute == 0):
                    await send_questionnaire_to_user(
                        bot,
                        telegram_id,
                        "üö∂ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–¥–∞–Ω–∏–µ '–•–æ–¥—å–±–∞': /walking",
                        "/walking",
                    )

                # ----------------- –î–ï–ù–¨ 19 -----------------

                if day_of_program == 19 and (current_hour == 19 and current_minute == 0):
                    await send_questionnaire_to_user(
                        bot,
                        telegram_id,
                        "‚Äçüë¶ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–¥–∞–Ω–∏–µ '–í—Ä–∞—â–µ–Ω–∏—è –≥–æ–ª–æ–≤–æ–π': /neck",
                        "/neck",
                    )
                # ----------------- –î–ï–ù–¨ 20 -----------------
                if day_of_program == 20 and (current_hour == 19 and current_minute == 0):
                    await send_questionnaire_to_user(
                        bot,
                        telegram_id,
                        "üçé –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∞–Ω–∫–µ—Ç—É –ø–∏—Ç–∞–Ω–∏—è: /nutrition",
                        "/nutrition",
                    )

                # ----------------- –î–ï–ù–¨ 21 -----------------
                # if day_of_program == 21 and (current_hour == 9 and current_minute == 0):
                #     await send_questionnaire_to_user(
                #         bot,
                #         telegram_id,
                #         "Ô∏è‚ù§Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–¥–∞–Ω–∏–µ '–ò–∑–º–µ—Ä–µ–Ω–∏—è –¥–∞–≤–ª–µ–Ω–∏—è –∏ –ø—É–ª—å—Å–∞': /pressure",
                #         "/pressure",
                #     )
                #
                # if day_of_program == 21 and (current_hour == 19 and current_minute == 0):
                #     await send_questionnaire_to_user(
                #         bot,
                #         telegram_id,
                #         "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å: /feedback",
                #         "/feedback",
                #     )

                # ----------------- –î–ï–ù–¨ 22 -----------------
                if day_of_program == 22 and (current_hour == 19 and current_minute == 0):
                    await send_questionnaire_to_user(
                        bot,
                        telegram_id,
                        "üõ°Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∞–Ω–∫–µ—Ç—É –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∏: /safety",
                        "/safety",
                    )

                # ----------------- –î–ï–ù–¨ 23 -----------------
                if day_of_program == 23 and (current_hour == 19 and current_minute == 0):
                    await send_questionnaire_to_user(
                        bot,
                        telegram_id,
                        "üë®‚Äçüë©‚Äçüëß‚Äçüë¶ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∞–Ω–∫–µ—Ç—É –±–ª–∏–∑–∫–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è: /close_environment",
                        "/close_environment",
                    )

                # ----------------- –î–ï–ù–¨ 24 -----------------
                if day_of_program == 24 and (current_hour == 19 and current_minute == 0):
                    await send_questionnaire_to_user(
                        bot,
                        telegram_id,
                        "üòÅ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–¥–∞–Ω–∏–µ '–ó–∞–ø–∏—Å—å —Å–º–µ—Ö–∞/—É–ª—ã–±–∫–∏': /laughter",
                        "/laughter",
                    )

                # ----------------- –î–ï–ù–¨ 25 -----------------
                if day_of_program == 25 and (current_hour == 10 and current_minute == 30):
                    await send_questionnaire_to_user(
                        bot,
                        telegram_id,
                        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–¥–∞–Ω–∏–µ '–¢–µ—Å—Ç –Ω–∞ —Ä–µ–∞–∫—Ü–∏—é': /reaction",
                        "/reaction",
                    )


                # ----------------- –î–ï–ù–¨ 26 -----------------


                # ----------------- –î–ï–ù–¨ 27 -----------------
                if day_of_program == 27 and (current_hour == 19 and current_minute == 0):
                    await send_questionnaire_to_user(
                        bot,
                        telegram_id,
                        "üè• –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∞–Ω–∫–µ—Ç—É —Å–æ—Å—Ç–æ—è–Ω–∏—è –∑–¥–æ—Ä–æ–≤—å—è: /subjective_health",
                        "/subjective_health",
                    )

                # ----------------- –î–ï–ù–¨ 28 -----------------

                if day_of_program == 28 and (current_hour == 20 and current_minute == 15):
                    await send_questionnaire_to_user(
                        bot,
                        telegram_id,
                        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–∏–Ω–∞–ª—å–Ω—É—é –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å: /feedback",
                        "/feedback",
                    )

            except Exception as e:
                logger.error(
                    f"Error processing patient {patient.get('telegram_id')}: {e}"
                )
                if use_test_data:
                    raise

        await asyncio.gather(*(process_patient(p) for p in patients))

    except Exception as e:
        logger.error(f"Critical error in questionnaire scheduler: {e}")
        raise
    finally:
        if not use_test_data and conn:
            await conn.close()


async def check_and_send_daily_questionnaire(
    bot: Bot, conn, user_id: int, today: datetime.date
):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é –∞–Ω–∫–µ—Ç—É, –µ—Å–ª–∏ –æ–Ω–∞ –µ—â–µ –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞"""
    try:
        filled = await conn.fetchval(
            """
            SELECT 1 FROM patient_history ph
            JOIN patients p ON ph.patient_id = p.id
            WHERE p.telegram_id = $1
            AND DATE(ph.created_at AT TIME ZONE p.timezone) = $2
            LIMIT 1
        """,
            user_id,
            today,
        )
        if not filled:
            await send_questionnaire_to_user(
                bot,
                user_id,
                "‚è∞ –í—Ä–µ–º—è –∑–∞–ø–æ–ª–Ω–∏—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é –∞–Ω–∫–µ—Ç—É!\n–í–≤–µ–¥–∏—Ç–µ /daily —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å",
                "/daily",
            )
    except Exception as e:
        logger.error(f"Error checking daily questionnaire for {user_id}: {e}")


def setup_scheduler(bot: Bot):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞"""
    scheduler.add_job(
        check_and_send_questionnaires,
        CronTrigger(minute="*", hour="*"),
        args=[bot],
        id="hourly_questionnaire_check",
        replace_existing=True,
    )
    scheduler.start()

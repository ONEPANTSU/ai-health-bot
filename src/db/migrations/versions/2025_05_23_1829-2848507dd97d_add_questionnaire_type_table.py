"""add questionnaire_type table

Revision ID: 2848507dd97d
Revises: db3185f1fc63
Create Date: 2025-05-23 18:29:45.376661

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "2848507dd97d"
down_revision: Union[str, None] = "db3185f1fc63"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "questionnaires",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("created_at", sa.DateTime(), server_default="now()", nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.add_column(
        "patient_history", sa.Column("questionnaire_id", sa.UUID(), nullable=True)
    )
    op.alter_column(
        "patient_history",
        "answers",
        existing_type=postgresql.JSON(astext_type=sa.Text()),
        nullable=False,
    )
    op.alter_column(
        "patient_history",
        "gpt_response",
        existing_type=sa.TEXT(),
        type_=sa.String(),
        existing_nullable=True,
    )
    op.alter_column(
        "patient_history",
        "s3_files",
        existing_type=postgresql.ARRAY(sa.TEXT()),
        type_=sa.ARRAY(sa.String()),
        existing_nullable=True,
    )
    op.alter_column(
        "patient_history",
        "summary",
        existing_type=sa.TEXT(),
        type_=sa.String(),
        existing_nullable=True,
    )
    op.create_foreign_key(
        None, "patient_history", "questionnaires", ["questionnaire_id"], ["id"]
    )
    op.alter_column(
        "patients",
        "username",
        existing_type=sa.TEXT(),
        type_=sa.String(),
        existing_nullable=True,
    )
    op.alter_column(
        "patients",
        "full_name",
        existing_type=sa.TEXT(),
        type_=sa.String(),
        existing_nullable=True,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "patients",
        "full_name",
        existing_type=sa.String(),
        type_=sa.TEXT(),
        existing_nullable=True,
    )
    op.alter_column(
        "patients",
        "username",
        existing_type=sa.String(),
        type_=sa.TEXT(),
        existing_nullable=True,
    )
    op.add_column(
        "patient_history",
        sa.Column("username", sa.TEXT(), autoincrement=False, nullable=True),
    )
    op.drop_constraint(None, "patient_history", type_="foreignkey")
    op.alter_column(
        "patient_history",
        "summary",
        existing_type=sa.String(),
        type_=sa.TEXT(),
        existing_nullable=True,
    )
    op.alter_column(
        "patient_history",
        "s3_files",
        existing_type=sa.ARRAY(sa.String()),
        type_=postgresql.ARRAY(sa.TEXT()),
        existing_nullable=True,
    )
    op.alter_column(
        "patient_history",
        "gpt_response",
        existing_type=sa.String(),
        type_=sa.TEXT(),
        existing_nullable=True,
    )
    op.alter_column(
        "patient_history",
        "answers",
        existing_type=postgresql.JSON(astext_type=sa.Text()),
        nullable=True,
    )
    op.drop_column("patient_history", "questionnaire_id")
    op.drop_table("questionnaires")
    # ### end Alembic commands ###
